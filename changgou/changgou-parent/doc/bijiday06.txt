+ 商品的搜索

+ 品牌列表的展示

+ 规格列表展示

+ 过滤查询
	+ 商品分类 过滤

	+ 品牌的过滤

	+ 规格的选项的过滤

	+ 价格区间过滤

+ 价格的排序

+ 分页查询

+ 高亮显示




+规格的列表数据展示
	+ 通过ES 的分组查询  查询 spec 得出规格的数据

	+ 获取数据集合,去除重复的规格名  去掉重复的规格选项的值

	+ 组合成一个Map<String,Set<String>> specMap ;  
		key:规格名称
		value:规格名对应的所有的选项值的列表 

	+返回给页面 循环遍历展示


 + 过滤查询   bool 查询 多条件组合查询
	+ 商品分类的过滤查询
	+ 品牌的过滤查询


	思路:
		+点击商品分类的时候 将点击到的商品分类名/品牌名称 拼接成一个字符串作为JSON对象传递到后台
		+ {"category":"手雷","brand":"TCL"}
		+ 后台接收到数据,获取里面key所对应的值:手雷
		+ 执行boolean多条件过滤查询   categyName--->手雷
		+ 返回map


+must 和filter
	+ must 和filter都表示必须要满足

	+ must 查询的时候需要匹配文档的分数 (性能要差,文档匹配度好)
	+ filter 查询的时候不需要匹配分数(性能更好)

+规格的过滤查询
	+ 点击规格的选项值
	+ 将被点击到的规格的名称 拼接成spec_规格名称 
	+ 将被点击到的规格的选项值 拼接成spec_规格名称 :"规格选项值"--->作为map的参数名和值 传递给后台
	+ 后台接收到之后,循环遍历 判断 获取规格的名 和规格的值
	+ 执行过滤查询
		specMap.规格名称.keyword=传递过来的规格的选项的值(被点击到的)   需要不分词 (属性.keyword)


+ 价格区间的查询(范围查询range)



+ 分页
	点击页码的时候 
	+ 传递当前的页码值 pageNum
	+ 传递每页显示的行(后台写死每页显示30个)

	+ 后台接收 执行分页查询


+高亮显示 手机
	+ 设置高亮显示的 字段
	+ 设置高亮显示的前缀  和 后缀  <em style="color:red">手机   </em>
	+ 添加到查询条件中

	+ 执行查询

	+ 获取高亮










